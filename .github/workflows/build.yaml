# SPDX-License-Identifier: Apache-2.0

name: Build
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ "main" ]
jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup nix
      uses: ./.github/actions/setup-nix
      with:
        script: |
          astyle --version
          arm-none-eabi-gcc --version
          qemu-system-arm --version
    - name: Lint
      shell: nix develop .#ci -c bash -e {0}
      run: |
          lint
    - name: Build targets
      shell: nix develop .#ci -c bash -e {0}
      run: |
          make_platform() {
            echo "::group::make platform $1"
            make PLATFORM="$1"
            echo "::endgroup::"

            echo "::group::make platform $1 nistkat"
            make PLATFORM="$1" RNG=NISTKAT nistkat
            echo "::endgroup::"
          }

          make_platform stm32f4discovery
          make_platform nucleo-f767zi
          make_platform nucleo-f207zg

    - name: Build for emulation on QEMU
      shell: nix develop .#ci -c bash -e {0}
      run: |
          output=$(make emulate) && true
          if [[ $? != 0 ]]; then
            echo "::error title={Build failed}::$output" 1>&2
          fi
    - name: Functional test
      id: func_test
      shell: nix develop .#ci -c bash -e {0}
      run: |
          tests func -v mps2-an386
    - name: Speed test
      id: speed_test
      shell: nix develop .#ci -c bash -e {0}
      if: |
        success()
        || steps.func_test.conclusion == 'failure'
      run: |
          tests speed -v mps2-an386
    - name: Stack test
      id: stack_test
      shell: nix develop .#ci -c bash -e {0}
      if: |
        success()
        || steps.func_test.conclusion == 'failure'
        || steps.speed_test.conclusion == 'failure'
      run: |
          tests stack -v mps2-an386
    - name: Nistkat test
      shell: nix develop .#ci -c bash -e {0}
      if: |
        success()
        || steps.func_test.conclusion == 'failure'
        || steps.speed_test.conclusion == 'failure'
        || steps.stack_test.conclusion == 'failure'
      run: |
        tests nistkat -v mps2-an386
